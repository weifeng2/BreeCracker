//http://td.ebuy.csemc.com/exp/querybusiness/common/xjggInfo.do?fphm=XJ021041200316&ydreferer=aHR0cDovL3RkLmVidXkuY3NlbWMuY29tL2V4cC9xdWVyeWJ1c2luZXNzL2NvbW1vbi94amdnSW5mby5kbz9mcGhtPVhKMDIxMDQxMjAwMzE2
//上面的这个地址请求了两次，第一次失败了，并且第1次是没有携带http_ydclearance这个cookie的，但是第2次请求时携带了这个cookie
//所以猜测第1次请求后返回的内容生成了这个cookie
//直接见代码吧，就是个document.cookie

function ar(UD) {
    var qo, mo = "",
    no = "",
    oo = [0xc5, 0xa7, 0xd2, 0x58, 0x9b, 0xfd, 0x44, 0x85, 0xab, 0x0f, 0xa1, 0xcf, 0x51, 0x57, 0x59, 0x0c, 0x8e, 0x51, 0x96, 0xe2, 0x3a, 0x47, 0x2a, 0x8d, 0xf4, 0xb6, 0x9a, 0x9a, 0x5f, 0xc4, 0x21, 0xa6, 0x09, 0x4e, 0x14, 0x2c, 0xcf, 0x91, 0xb7, 0x39, 0x4a, 0x8f, 0xdb, 0x27, 0x52, 0x30, 0xbb, 0xe6, 0x52, 0x7d, 0x31, 0x60, 0xc1, 0x47, 0x6c, 0x4a, 0x37, 0x03, 0xee, 0xda, 0xd5, 0x01, 0x90, 0xd1, 0x9d, 0xd0, 0x1c, 0x08, 0xd4, 0xc0, 0x20, 0x8b, 0xf6, 0x41, 0x50, 0x0c, 0x8d, 0x19, 0x3e, 0x8c, 0x2d, 0x9c, 0xbd, 0xcc, 0x38, 0x28, 0x72, 0x3f, 0xea, 0xd6, 0x24, 0xaf, 0xf9, 0xbf, 0x6b, 0xa4, 0x66, 0x33, 0xb8, 0x7a, 0x60, 0xa1, 0x6d, 0x13, 0x58, 0xf1, 0x00, 0xec, 0x37, 0x03, 0x13, 0x3e, 0xc9, 0xb5, 0x01, 0x8d, 0x9c, 0x65, 0x11, 0x60, 0x7b, 0x68, 0xf4, 0xde, 0x24, 0x79, 0x5e, 0x42, 0x05, 0xac, 0x68, 0xa9, 0x2d, 0x79, 0xdc, 0x6b, 0x4e, 0x91, 0xff, 0xe9, 0x4f, 0x3b, 0xe6, 0x31, 0xb4, 0xbc, 0xfd, 0xe1, 0x30, 0xdb, 0xac, 0x78, 0x62, 0x2e, 0x1a, 0xe7, 0x94, 0xff, 0xeb, 0x98, 0xf9, 0x45, 0x32, 0x20, 0x1d, 0xdd, 0x20, 0x7f, 0x0c, 0xf5, 0xb5, 0x1b, 0x1d, 0x63, 0x25, 0x94, 0x57, 0x79, 0xc5, 0xf3, 0x6f, 0xf4, 0x78, 0xb9, 0xff, 0x89, 0x0f, 0x39, 0xbe, 0xc4, 0xcc, 0x0f, 0x9b, 0x85, 0x69, 0xe6, 0xac, 0x10, 0xf2, 0x3f, 0xb6, 0xc4, 0xcd, 0x5a, 0x5d, 0xb2, 0x75, 0x9b, 0x00, 0x03, 0x22, 0x25, 0x53, 0xb8, 0xba, 0x5e, 0xe3, 0x27, 0x69, 0xae, 0x6c, 0x8e, 0xf1, 0x20, 0x82, 0x56, 0x5c, 0xdd, 0xa3, 0x07, 0x42, 0x05, 0x0b, 0x2d, 0x79, 0x2b, 0x38, 0x42, 0x87, 0x6c, 0xa4, 0x88, 0x92, 0x56, 0x99, 0xcf, 0x11, 0xb8, 0x79, 0x1f, 0x66, 0xa9, 0x2d, 0xf3, 0x16, 0xf6, 0x3c, 0xbf, 0x43, 0x4d, 0x59, 0xde, 0xe4, 0x27, 0x69, 0x40, 0x42, 0x68, 0x72, 0x57, 0x07, 0xa9, 0xae, 0xb3, 0x72, 0xa0, 0xc2, 0xe7, 0xe9, 0x18, 0x95, 0xfa, 0x00, 0x09, 0x2e, 0xf1, 0xd5, 0xbc, 0xfe, 0x4b, 0xb5, 0x96, 0x35, 0x21, 0xd0, 0xc7, 0x93, 0x7f, 0xea, 0xb6, 0x54, 0xff, 0xeb, 0xd7, 0x63, 0x13, 0xde, 0x0a, 0x37, 0xfb, 0xe7, 0x49, 0xf0, 0x32, 0x57, 0xd7, 0x19, 0xc0, 0x02, 0xa5, 0x43, 0x8f, 0x51, 0x34, 0xd3, 0x49, 0x35, 0xba, 0x1c, 0x1e, 0x1e, 0x41, 0xa3, 0x2f, 0xce, 0xdf, 0x62, 0xc4, 0x07, 0x26, 0x2e, 0xf4, 0x56, 0x37, 0xb9, 0x42, 0x85, 0x46, 0xd1, 0xf3, 0x86, 0xec, 0x8e, 0x8d, 0xcf, 0x36, 0x79, 0x3a, 0xe5, 0xb2, 0x79, 0xe0, 0x3f, 0xea, 0x0a, 0xbd, 0x29, 0xae, 0x30, 0xfc, 0xe2, 0xc7, 0x29, 0x2c, 0x4b, 0x07, 0xcb, 0x0d, 0x10, 0xae, 0xaa, 0x76, 0xfb, 0xa7, 0x0a, 0x98, 0xdb, 0x7c, 0x59, 0x7b, 0xb0, 0x51, 0xb3, 0x5f, 0x7d, 0xf2, 0x16, 0xbb, 0xba, 0x86, 0x61, 0x88, 0x2a, 0xf0, 0xb9, 0x11, 0x80, 0x42, 0x88, 0xe9, 0x58, 0x7a, 0xf9, 0xfc, 0x48, 0xe5, 0x2c, 0xcd, 0x92, 0xdd, 0x3a, 0xc0, 0x62, 0x07, 0xd3, 0x1f, 0x61, 0xe6, 0xe7, 0xca, 0xf6, 0x5a, 0x3a, 0x59, 0x40, 0x3c, 0xba, 0xfc, 0x5a, 0x19, 0xcd, 0xb2, 0xf4, 0x52, 0x12, 0xef, 0xd4, 0x13, 0xb5, 0x77, 0x05, 0x0c, 0x4a, 0xee, 0x30, 0xf7, 0xa3, 0xd0, 0x91, 0xf6, 0x9d, 0x41, 0x86, 0xab, 0xf0, 0xd2, 0x76, 0xbb, 0x5f, 0xab, 0x4c, 0x0e, 0xf0, 0x90, 0x7c, 0xd1, 0x57, 0xb8, 0xba, 0xdd, 0x04, 0x62, 0xed, 0x8d, 0x14, 0xf8, 0x57, 0x99, 0xbc, 0x7f, 0xcc, 0x2e, 0x0f, 0x91, 0xd8, 0x90, 0x4d, 0xdc, 0xfa, 0x5d, 0xcf, 0x71, 0x74, 0xb2, 0xf5, 0xec, 0xa9, 0x55, 0x22, 0x85, 0x91, 0xf3, 0x9f, 0xbe, 0x2a, 0xd9, 0x5f, 0xe0, 0xa9, 0x8e, 0xf2, 0x58, 0x57, 0x76, 0x3b, 0x7c, 0xbd, 0xc0, 0x5f, 0x2b, 0x2e, 0xb3, 0x5f, 0xc1, 0x05, 0x69, 0x0a, 0xea, 0x09, 0xad, 0x9e, 0x00, 0xac, 0xca, 0xed, 0x7c, 0x1e, 0x1d, 0xec, 0x10, 0xe3, 0x85, 0x4c, 0x15, 0x84, 0x3d, 0x03, 0x45, 0xaa, 0xd0, 0x9f, 0x1f, 0x1e, 0x69, 0xaf, 0x99, 0x3f, 0x04, 0x4f, 0xd1, 0x18, 0xb9, 0x5e, 0x2b, 0x6d, 0x6e, 0xf3, 0xf4, 0xd7, 0x3b, 0x55, 0x35, 0x58, 0x3b, 0xb9, 0xbc, 0xfa, 0x5c, 0x1b, 0xff, 0x27, 0x65, 0xc6, 0x86, 0x6b, 0xf2, 0x31, 0xd7, 0x95, 0x9c, 0x86, 0xc8, 0x69, 0xaa, 0x56, 0xf1, 0x94, 0x3b];
    qo=606; do{oo[qo]=(-oo[qo])&0xff; oo[qo]=(((oo[qo]>>2)|((oo[qo]<<6)&0xff))-12)&0xff;} while(--qo>=2);
   // eval(qo);
    qo = 605;
    do {
        oo[qo] = (oo[qo] - oo[qo - 1]) & 0xff;
    } while (-- qo >= 3 );
    qo = 1;
    for (;;) {
        if (qo > 605) break;
        oo[qo] = ((((((oo[qo] + 183) & 0xff) + 4) & 0xff) << 5) & 0xff) | (((((oo[qo] + 183) & 0xff) + 4) & 0xff) >> 3);
        qo++;
    }
    po = "";
    for (qo = 1; qo < oo.length - 1; qo++) if (qo % 5) po += String.fromCharCode(oo[qo] ^ UD);

    console.log(po)
}    

ar(40);

